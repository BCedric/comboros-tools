services:
  www:
    build:
      context: ../
      dockerfile: ./.docker/Dockerfile
      args:
        NODE_TAG: ${NODE_TAG}
        UPLOAD_DIR: ${UPLOAD_DIR}
        IMG_DIR: ${IMG_DIR}
        FILES_DIR: ${FILES_DIR}
        APACHE_IMAGE: ${APACHE_IMAGE}
        ARCHIVES__DOCAPOST_DIR: ${ARCHIVES__DOCAPOST_DIR}
    volumes:
      - ../:/var/www/html/
    networks:
      - localNetwork
      - webgateway
    entrypoint: ['/bin/sh', '.docker/entrypoint.sh']
    ports:
      - ${APP_PORT}:80
    restart: unless-stopped
  db:
    image: ${DB_IMAGE}:${DB_TAG}
    container_name: db_comboros_tool
    volumes:
      - /data/comboros_tools/db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    networks:
      - localNetwork
    ports:
      - '127.0.0.1:${DB_PORT}:3306'
  node:
    image: node:${NODE_TAG}
    working_dir: /var/www/html/
    volumes:
      - ../:/var/www/html/
    command:
      - /bin/sh
      - '-c'
      # - 'npm install @babel/plugin-proposal-class-properties @babel/preset-react'
      - 'npm install && npm run watch'
    networks:
      - localNetwork
      - webgateway

volumes:
  db_data:
    driver: local

networks:
  webgateway:
    external: true
  localNetwork:
    name: comboros_tools_net
    driver: bridge
